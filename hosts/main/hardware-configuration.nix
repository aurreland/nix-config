# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, username, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
    
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/9e848cf3-b879-42b0-b873-894788112266";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-f1e86d56-be3a-47ad-acc4-ba52347cbbf0".device = "/dev/disk/by-uuid/f1e86d56-be3a-47ad-acc4-ba52347cbbf0";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/98EC-6126";
      fsType = "vfat";
    };
  
  swapDevices =
    [ { device = "/dev/disk/by-uuid/647d31b5-aa17-4e05-9454-03aab379d1aa"; }
    ];

  fileSystems."/home/aurel/Media" =
    { device = "/dev/disk/by-uuid/2106CAB6205AC3ED";
      fsType = "ntfs-3g"; 
      options = [ "rw" "uid=1000"];
    };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
